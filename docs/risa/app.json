[{"name":"app.R","content":"library(shiny)\n\n## globals\nrange <- 20\nrisa_plot <- function(picard, laris, dist, attempts) {\n  # Set up the plotting field\n  plot(1, type = \"n\", xlim = c(0, 100), ylim = c(0, 100),\n       xlab = \"\", ylab = \"\", axes = FALSE, asp = 1)\n  # add surrounding box back\n  box()\n  # Draw transparent beige circles\n  symbols(picard[1], picard[2], circles = range,\n          inches = FALSE, add = TRUE,\n          bg = adjustcolor(\"beige\", alpha.f = 0.6),\n          fg = \"black\")\n  # symbols(laris[1], laris[2], circles = 10,\n  #         inches = FALSE, add = TRUE,\n  #         bg = adjustcolor(\"beige\", alpha.f = 0.6),\n  #         fg = \"black\")\n  # Add the centers:\n  points(picard[1], picard[2], pch = 19, cex = 0.2)\n  points(laris[1], laris[2], pch = 19, cex = 0.2)\n  # Add labels for clarity\n  text(picard[1], picard[2] + 2, labels = \"Picard\", col = \"red\", cex = 0.8)\n  text(laris[1], laris[2] + 2, labels = \"Laris\", col = \"blue\", cex = 0.8)\n  plot_title <- ifelse(\n    dist < range,\n    paste0(\"Attempt #\", attempts, \": they meet!\"),\n    paste0(\"Attempt #\", attempts, \": they miss each other.  Sad!\")\n  )\n  title(main = plot_title)\n}\n\n## ui\nui <- pageWithSidebar(\n  headerPanel = titlePanel(\"Risa Rendevous\"),\n  sidebarPanel = sidebarPanel(\n    actionButton(\"go\", \"Try to Meet!\")\n  ),\n  mainPanel = mainPanel(plotOutput(\"risaPlot\"))\n)\n\n\n## server logic\nserver <- function(input, output) {\n  rv <- reactiveValues(\n    attempts = 0,\n    distance = Inf,\n    picard = NULL,\n    laris = NULL,\n    trying = FALSE\n  )\n  \n  observeEvent(input$go, {\n    rv$distance <- Inf\n    rv$attempts <- 0\n    rv$picard <- NULL\n    rv$laris <- NULL\n    rv$trying <- TRUE\n  })\n  \n  observe({\n    invalidateLater(1000)\n    isolate({\n      req(rv$trying)\n      rv$picard <- runif(2, min = 0, max = 100)\n      rv$laris <- runif(2, min = 0, max = 100)\n      rv$attempts <- rv$attempts + 1\n      px <- rv$picard[1]\n      py <- rv$picard[2]\n      lx <- rv$laris[1]\n      ly <- rv$laris[2]\n      dist <- sqrt((px - lx)^2 + (py - ly)^2)\n      rv$distance <- dist\n      print(rv$attempts)\n      print(rv$distance)\n      if (dist < range) {\n        rv$trying <- FALSE\n      }\n    })\n  })\n  \n  output$risaPlot <- renderPlot(\n    {\n      if (rv$attempts > 0) {\n        isolate({\n          risa_plot(\n            picard = rv$picard, \n            laris = rv$laris, \n            dist = rv$distance,\n            attempts = rv$attempts\n          )\n        })\n      }\n    },\n    width = 400,\n    height = 400\n  )\n}\n\n# run it\nshinyApp(ui = ui, server = server)","type":"text"}]
