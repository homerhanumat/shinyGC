[{"name":"app.R","content":"library(shiny)\nlibrary(shinyjs)\nlibrary(glue)\nlibrary(DT)\n\n## globals\n\n## ui\nui <- pageWithSidebar(\n  headerPanel = titlePanel(\"Hat Toss\"),\n  sidebarPanel = sidebarPanel(\n    numericInput(\"n\", \"Number of People Involved\", value = 10, min =1, step = 1),\n    actionButton(\"go\", \"Toss the Hats!\"),\n    hidden(actionButton(\"restart\", \"Start Over\"))\n  ),\n  mainPanel = mainPanel(\n    verbatimTextOutput(\"report\"),\n    dataTableOutput(\"df\"),\n    useShinyjs()\n  )\n)\n\n\n## server logic\nserver <- function(input, output) {\n  \n  rv <- reactiveValues(\n    occurred = 0,\n    plays = 0,\n    msg = \"\",\n    df = NULL\n  )\n  \n  observeEvent(input$restart, {\n    rv$occurred <- 0\n    rv$plays <- 0\n    rv$msg <- \"\"\n    rv$df <- NULL\n    hide(\"restart\")\n    show(\"n\")\n  })\n  \n  observeEvent(input$go, {\n    hide(\"n\")\n    show(\"restart\")\n    people <- 1:input$n\n    hats <- sample(people, size = input$n, replace = FALSE)\n    rv$occurred <- rv$occurred + any(people == hats)\n    rv$plays <- rv$plays + 1\n    avg <- round(rv$occurred/rv$plays, digits = 3)\n    rv$df <- data.frame(\n      person = people,\n      hat_picked_up = hats,\n      response = ifelse(\n        people == hats,\n        \"Woo-hoo!  I got my own hat!\",\n        \"meh\"\n      )\n    )\n    # msg <- glue(\n    #   \"After {rv$plays} tosses, at least one person got his/her own hat:  {rv$occured} times.\n    #    The proportion of times this has occurred is:  {avg}.\"\n    # )\n    msg <- glue::glue(\n      \"After {rv$plays} tosses, at least once person got his/her own hat {rv$occurred} times.\n      The proportion of times this happened is:    {avg}.\"\n    )\n    rv$msg <- msg\n  })\n  \n  output$report <- renderText({\n    rv$msg\n  })\n  \n  output$df <- renderDT({\n    req(!is.null(rv$df))\n    rv$df\n  }, rownames = FALSE)\n}\n\n# run it\nshinyApp(ui = ui, server = server)","type":"text"}]
